{"ast":null,"code":"var _jsxFileName = \"/home/royal/Desktop/ustraachallenge/client/src/components/nav.js\";\nimport React from 'react';\nimport { Layout, Menu, Icon, Button } from 'antd';\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer;\nexport default function nav() {\n  generateGroups = () => {\n    const ucl = data.concat();\n\n    const shuffle = array => {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    shuffle(ucl);\n\n    function getGroups() {\n      const group = []; // cmaking an array of winners\n\n      const winners = [];\n      ucl.forEach(element => {\n        if (element.winner) {\n          winners.push(element);\n        }\n      });\n\n      for (let x in winners) {\n        let tempArr = [];\n        let countryArr = [];\n        tempArr.push(winners[x]);\n        countryArr.push(winners[x].country); // console.log(\"winner\",winners[x]);\n        // console.log(\"country arr before loop\",countryArr);\n\n        for (let y in ucl) {\n          let count = 0;\n\n          while (tempArr.length < 4) {\n            count = count + 1;\n            const next = ucl[Math.floor(Math.random(0, ucl.length) * ucl.length)]; // console.log(\"next generated\",next);\n\n            const countryCount = countryArr.filter(el => {\n              return el === next.country;\n            }); // console.log(countryArr);\n            // console.log(\"countryValidation\",countryCount);\n\n            if (next.winner !== true && countryCount.length === 0) {\n              // console.log(\"pushed\");\n              tempArr.push(next);\n\n              _.pullAllBy(ucl, [{\n                'name': next.name\n              }], 'name');\n\n              countryArr.push(next.country);\n              console.log(ucl.length);\n            }\n\n            if (count > 10) {\n              break;\n            }\n          } // console.log(\"temp ha ye\", group.push(tempArr));\n\n\n          group.push(tempArr);\n          break;\n        }\n      }\n\n      console.log(\"finaaaaaaaaaaal\", group[group.length - 1].length < 4);\n\n      if (group[group.length - 1].length < 4 || group[group.length - 2].length < 4) {\n        return -1;\n      } else {\n        return group;\n      }\n    }\n\n    return getGroups();\n  };\n\n  onclick = () => {\n    window.location.reload();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logo\",\n    src: require('../logo2.png'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Menu // onClick={this.handleClick}\n  , {\n    mode: \"horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Re -Draw\"))))));\n}","map":{"version":3,"sources":["/home/royal/Desktop/ustraachallenge/client/src/components/nav.js"],"names":["React","Layout","Menu","Icon","Button","Header","Content","Footer","nav","generateGroups","ucl","data","concat","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","getGroups","group","winners","forEach","element","winner","push","x","tempArr","countryArr","country","y","count","next","countryCount","filter","el","_","pullAllBy","name","console","log","onclick","window","location","reload","require","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Layout,Menu,Icon, Button} from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nexport default function nav() {\n\n  generateGroups= ()=> {\n    const ucl = data.concat()\n    const shuffle = (array) => {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n\n    shuffle(ucl)\n\n    function getGroups() {\n        const group = []\n\n    // cmaking an array of winners\n    const winners = []\n    ucl.forEach(element => {\n        if (element.winner) {\n            winners.push(element)\n        }\n    });\n    for (let x in winners) {\n        let tempArr = []\n        let countryArr = []\n        tempArr.push(winners[x])\n        countryArr.push(winners[x].country)\n        // console.log(\"winner\",winners[x]);\n        // console.log(\"country arr before loop\",countryArr);\n        for (let y in ucl) {\n            let count=0\n            while (tempArr.length < 4) {\n                count=count+1\n                const next = ucl[Math.floor(Math.random(0, ucl.length) * ucl.length)]\n                // console.log(\"next generated\",next);\n                const countryCount = countryArr.filter(el => {\n                    return el === next.country\n                })\n                // console.log(countryArr);\n                // console.log(\"countryValidation\",countryCount);\n                if (next.winner !== true && (countryCount.length === 0)) {\n                    // console.log(\"pushed\");\n                    tempArr.push(next)\n                    _.pullAllBy(ucl,[{ 'name':next.name }], 'name');\n                    countryArr.push(next.country)\n                    console.log(ucl.length);\n\n                }\n                if(count>10){\n                    break\n                }\n            }\n            // console.log(\"temp ha ye\", group.push(tempArr));\n            group.push(tempArr)\n            break\n        }\n    }\n\n    console.log(\"finaaaaaaaaaaal\",group[group.length-1].length<4);\n\n    if ((group[group.length-1].length<4)|| (group[group.length-2].length<4)){\n       return -1\n    }\n    else{\n    return group\n    }\n    }\n    return getGroups()\n}\n\n  onclick= ()=>{\n    window.location.reload()\n  }\n    return (\n        <div>\n        <Header className=\"header\">\n          <div className=\"brand\">\n          <img className=\"logo\" src={ require('../logo2.png') } />\n          </div>\n          <div style={{ textAlign: 'center' }}>\n          <Menu\n              // onClick={this.handleClick}\n              mode=\"horizontal\"\n            >\n              <Menu.Item>\n                <Button onClick={onclick}>Re -Draw</Button></Menu.Item>\n              </Menu>\n              </div>\n        </Header>\n</div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}